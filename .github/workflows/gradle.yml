# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches : ["main"]
  pull_request:
    branches : ["main"]

jobs:
  build-test:

    runs-on: windows-latest
    permissions:
      contents: read
      actions : read
      checks : write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Test avec Gradle Wrapper
      run: ./gradlew test

    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: build/test-results/test

    - name : Resume des tests
      uses : dorny/test-reporter@v1.8.0
      with :
        name : JUNIT test
        path : build/test-results/test/*.xml
        reporter: java-junit

    - name: JaCoCo Code Coverage Report
      id: jacoco_reporter
      uses: PavanMudigonda/jacoco-reporter@v4.9
      with:
          coverage_results_path: build\reports\jacoco\test\jacocoTestReport.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          skip_check_run: false
          minimum_coverage: 10
          fail_below_threshold: false
          publish_only_summary: false
      
      # Publish Coverage Job Summary  # Optional
    - name: Add Coverage Job Summary
      run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY
          
      # uploads the coverage-report.md artifact  # Optional

    - name: Upload Code Coverage Artifacts
      uses: actions/upload-artifact@v2
      with:
          name: code-coverage-report-markdown
          path: "*/coverage-results.md"
          retention-days: 1